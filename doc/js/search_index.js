var search_data = {"index":{"searchIndex":["activesupport","testcase","addaprovedtocomments","addlikescounttoproducts","adduniqueindexofuserproductonlikemodel","addusertologs","applicationcable","channel","connection","connectiontest","applicationcontroller","applicationhelper","applicationjob","applicationmailer","applicationpolicy","scope","applicationrecord","applicationservice","applicationsystemtestcase","changenullconstraintonorders","comment","commentform","commentpolicy","scope","commenttest","comments","commentcreatorservice","commentdestroyservice","commentfinderservice","commentupdaterservice","commentscontroller","commentscontrollertest","commentshelper","createcomments","createlikes","createlogs","createorderlines","createorders","createproducts","createtags","devisecreateusers","like","likepolicy","liketest","likes","likecreatorservice","likedestroyservice","likefinderservice","likescontroller","likescontrollertest","likeshelper","log","logpolicy","logtest","logs","logindexservice","logscontroller","logscontrollertest","logshelper","object","order","orderline","orderlineform","orderlinepolicy","orderlinetest","orderlines","orderlinecreatorservice","orderlinedestroyservice","orderlinefinderservice","orderlineupdaterservice","orderlinescontroller","orderlinescontrollertest","orderlineshelper","orderpolicy","ordertest","orders","orderfinderservice","orderindexservice","orderupdaterservice","orderscontroller","orderscontrollertest","ordershelper","ordersquery","product","productform","productpolicy","producttest","products","productcreatorservice","productdestroyservice","productfinderservice","productindexservice","productupdaterservice","productscontroller","productscontrollertest","productshelper","productsquery","productstags","removeuseridfromlogs","sessionscontroller","store","application","tag","tagtest","user","usertest","activate_bundler()","activation_error_handling()","after_login()","available_stock?()","bundler_requirement()","bundler_requirement_for()","button_style()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","cart()","cart?()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","check_stock()","cli_arg_version()","comment_approve_link()","comment_delete_link()","configure_permitted_parameters()","create()","create()","create()","create()","create?()","create?()","create?()","create?()","create?()","current_order()","destroy()","destroy()","destroy()","destroy()","destroy?()","destroy?()","destroy?()","destroy?()","destroy?()","edit()","edit?()","env_var_version()","filter_by_tag()","filter_by_term()","filter_by_user()","find_like()","gemfile()","index()","index()","index()","index?()","index?()","index?()","invoked_as_script?()","liked_by?()","load_bundler!()","lockfile()","lockfile_version()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new?()","order_by_letter()","order_by_likes_count()","permitted_attributes()","resolve()","resolve()","show()","show()","show?()","show?()","system!()","unique_name()","update()","update()","update()","update()","update?()","update?()","update?()","update?()","update?()","gemfile","gemfile.lock","procfile.dev","readme","rakefile","tailwind.css","manifest.js","application.css","application.tailwind.css","application.js","application.js","hello_controller.js","index.js","dev","config.ru","credentials.yml.enc","tailwind.config.js","application.css","application.js","index.html","products.json","tags.json","development.log","test.log","404.html","422.html","500.html","apple-touch-icon-precomposed.png","apple-touch-icon.png","favicon.ico","robots","development_secret","restart"],"longSearchIndex":["activesupport","activesupport::testcase","addaprovedtocomments","addlikescounttoproducts","adduniqueindexofuserproductonlikemodel","addusertologs","applicationcable","applicationcable::channel","applicationcable::connection","applicationcable::connectiontest","applicationcontroller","applicationhelper","applicationjob","applicationmailer","applicationpolicy","applicationpolicy::scope","applicationrecord","applicationservice","applicationsystemtestcase","changenullconstraintonorders","comment","commentform","commentpolicy","commentpolicy::scope","commenttest","comments","comments::commentcreatorservice","comments::commentdestroyservice","comments::commentfinderservice","comments::commentupdaterservice","commentscontroller","commentscontrollertest","commentshelper","createcomments","createlikes","createlogs","createorderlines","createorders","createproducts","createtags","devisecreateusers","like","likepolicy","liketest","likes","likes::likecreatorservice","likes::likedestroyservice","likes::likefinderservice","likescontroller","likescontrollertest","likeshelper","log","logpolicy","logtest","logs","logs::logindexservice","logscontroller","logscontrollertest","logshelper","object","order","orderline","orderlineform","orderlinepolicy","orderlinetest","orderlines","orderlines::orderlinecreatorservice","orderlines::orderlinedestroyservice","orderlines::orderlinefinderservice","orderlines::orderlineupdaterservice","orderlinescontroller","orderlinescontrollertest","orderlineshelper","orderpolicy","ordertest","orders","orders::orderfinderservice","orders::orderindexservice","orders::orderupdaterservice","orderscontroller","orderscontrollertest","ordershelper","ordersquery","product","productform","productpolicy","producttest","products","products::productcreatorservice","products::productdestroyservice","products::productfinderservice","products::productindexservice","products::productupdaterservice","productscontroller","productscontrollertest","productshelper","productsquery","productstags","removeuseridfromlogs","sessionscontroller","store","store::application","tag","tagtest","user","usertest","object#activate_bundler()","object#activation_error_handling()","sessionscontroller#after_login()","product#available_stock?()","object#bundler_requirement()","object#bundler_requirement_for()","applicationhelper#button_style()","applicationservice::call()","comments::commentcreatorservice#call()","comments::commentdestroyservice#call()","comments::commentfinderservice#call()","comments::commentupdaterservice#call()","likes::likecreatorservice#call()","likes::likedestroyservice#call()","likes::likefinderservice#call()","logs::logindexservice#call()","orderlines::orderlinecreatorservice#call()","orderlines::orderlinedestroyservice#call()","orderlines::orderlinefinderservice#call()","orderlines::orderlineupdaterservice#call()","orders::orderfinderservice#call()","orders::orderindexservice#call()","orders::orderupdaterservice#call()","products::productcreatorservice#call()","products::productdestroyservice#call()","products::productfinderservice#call()","products::productindexservice#call()","products::productupdaterservice#call()","orderscontroller#cart()","orderpolicy#cart?()","addaprovedtocomments#change()","addlikescounttoproducts#change()","adduniqueindexofuserproductonlikemodel#change()","addusertologs#change()","changenullconstraintonorders#change()","createcomments#change()","createlikes#change()","createlogs#change()","createorderlines#change()","createorders#change()","createproducts#change()","createtags#change()","devisecreateusers#change()","productstags#change()","removeuseridfromlogs#change()","orderlineform#check_stock()","object#cli_arg_version()","commentshelper#comment_approve_link()","commentshelper#comment_delete_link()","applicationcontroller#configure_permitted_parameters()","commentscontroller#create()","likescontroller#create()","orderlinescontroller#create()","productscontroller#create()","applicationpolicy#create?()","commentpolicy#create?()","likepolicy#create?()","orderlinepolicy#create?()","productpolicy#create?()","applicationhelper#current_order()","commentscontroller#destroy()","likescontroller#destroy()","orderlinescontroller#destroy()","productscontroller#destroy()","applicationpolicy#destroy?()","commentpolicy#destroy?()","likepolicy#destroy?()","orderlinepolicy#destroy?()","productpolicy#destroy?()","productscontroller#edit()","applicationpolicy#edit?()","object#env_var_version()","productsquery#filter_by_tag()","productsquery#filter_by_term()","ordersquery#filter_by_user()","product#find_like()","object#gemfile()","logscontroller#index()","orderscontroller#index()","productscontroller#index()","applicationpolicy#index?()","logpolicy#index?()","orderpolicy#index?()","object#invoked_as_script?()","product#liked_by?()","object#load_bundler!()","object#lockfile()","object#lockfile_version()","applicationpolicy::new()","applicationpolicy::scope::new()","comments::commentcreatorservice::new()","comments::commentdestroyservice::new()","comments::commentfinderservice::new()","comments::commentupdaterservice::new()","likes::likecreatorservice::new()","likes::likedestroyservice::new()","likes::likefinderservice::new()","logs::logindexservice::new()","orderlines::orderlinecreatorservice::new()","orderlines::orderlinedestroyservice::new()","orderlines::orderlinefinderservice::new()","orderlines::orderlineupdaterservice::new()","orders::orderfinderservice::new()","orders::orderindexservice::new()","orders::orderupdaterservice::new()","ordersquery::new()","products::productcreatorservice::new()","products::productdestroyservice::new()","products::productfinderservice::new()","products::productindexservice::new()","products::productupdaterservice::new()","productscontroller#new()","productsquery::new()","applicationpolicy#new?()","productsquery#order_by_letter()","productsquery#order_by_likes_count()","productpolicy#permitted_attributes()","applicationpolicy::scope#resolve()","commentpolicy::scope#resolve()","orderscontroller#show()","productscontroller#show()","applicationpolicy#show?()","orderpolicy#show?()","object#system!()","productform#unique_name()","commentscontroller#update()","orderlinescontroller#update()","orderscontroller#update()","productscontroller#update()","applicationpolicy#update?()","commentpolicy#update?()","orderlinepolicy#update?()","orderpolicy#update?()","productpolicy#update?()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["ActiveSupport","","ActiveSupport.html","",""],["ActiveSupport::TestCase","","ActiveSupport/TestCase.html","",""],["AddAprovedToComments","","AddAprovedToComments.html","",""],["AddLikesCountToProducts","","AddLikesCountToProducts.html","","<p>Migration to add like_count column on products\n"],["AddUniqueIndexOfUserProductOnLikeModel","","AddUniqueIndexOfUserProductOnLikeModel.html","","<p>Migration to add Unique identifiers for each like\n"],["AddUserToLogs","","AddUserToLogs.html","","<p>Migration to add user reference on log table\n"],["ApplicationCable","","ApplicationCable.html","",""],["ApplicationCable::Channel","","ApplicationCable/Channel.html","",""],["ApplicationCable::Connection","","ApplicationCable/Connection.html","",""],["ApplicationCable::ConnectionTest","","ApplicationCable/ConnectionTest.html","",""],["ApplicationController","","ApplicationController.html","","<p>Methods that applies to the overall controllers, include Pundit gem for Authorization and Helpers for …\n"],["ApplicationHelper","","ApplicationHelper.html","","<p>Helpers for overall Application views\n"],["ApplicationJob","","ApplicationJob.html","",""],["ApplicationMailer","","ApplicationMailer.html","",""],["ApplicationPolicy","","ApplicationPolicy.html","","<p>General configuration for the policies generated by the Pundit gem\n"],["ApplicationPolicy::Scope","","ApplicationPolicy/Scope.html","","<p>Scopes\n"],["ApplicationRecord","","ApplicationRecord.html","",""],["ApplicationService","","ApplicationService.html","","<p>Class that abstracts the call method and inherits to every service object\n"],["ApplicationSystemTestCase","","ApplicationSystemTestCase.html","",""],["ChangeNullConstraintOnOrders","","ChangeNullConstraintOnOrders.html","","<p>Migration to allow orders be created without users\n"],["Comment","","Comment.html","","<p>Class that represents the Model for the Comment schema\n"],["CommentForm","","CommentForm.html","","<p>Form object for Comment Model\n"],["CommentPolicy","","CommentPolicy.html","","<p>Define policies for Comments Controllers\n"],["CommentPolicy::Scope","","CommentPolicy/Scope.html","","<p>Policy for the create controller\n"],["CommentTest","","CommentTest.html","",""],["Comments","","Comments.html","",""],["Comments::CommentCreatorService","","Comments/CommentCreatorService.html","","<p>Service Object to Create a Comment\n"],["Comments::CommentDestroyService","","Comments/CommentDestroyService.html","","<p>Service Object to Destroy a Comment\n"],["Comments::CommentFinderService","","Comments/CommentFinderService.html","","<p>Service Object To Find a Comment\n"],["Comments::CommentUpdaterService","","Comments/CommentUpdaterService.html","","<p>Service Object to Update a Comment\n"],["CommentsController","","CommentsController.html","","<p>Define the Controllers required for the Comments endpoints\n"],["CommentsControllerTest","","CommentsControllerTest.html","",""],["CommentsHelper","","CommentsHelper.html","","<p>Helpers for Comments views\n"],["CreateComments","","CreateComments.html","","<p>Migration to create polymorphic comment table\n"],["CreateLikes","","CreateLikes.html","","<p>Migration to create Likes table\n"],["CreateLogs","","CreateLogs.html","","<p>Migration to create polymorphic log table\n"],["CreateOrderLines","","CreateOrderLines.html","","<p>Migration to create Order Lines table\n"],["CreateOrders","","CreateOrders.html","","<p>Migration to create Orders table\n"],["CreateProducts","","CreateProducts.html","","<p>Migration to create Products table\n"],["CreateTags","","CreateTags.html","","<p>Migration to create Tag table\n"],["DeviseCreateUsers","","DeviseCreateUsers.html","","<p>Migration to create users with Devise gem\n"],["Like","","Like.html","","<p>Class that represents the Model for the Like schema\n"],["LikePolicy","","LikePolicy.html","","<p>Define policies for Likes Controllers\n"],["LikeTest","","LikeTest.html","",""],["Likes","","Likes.html","",""],["Likes::LikeCreatorService","","Likes/LikeCreatorService.html","","<p>Service Object to Create a Like\n"],["Likes::LikeDestroyService","","Likes/LikeDestroyService.html","","<p>Service Object to Destroy a Like\n"],["Likes::LikeFinderService","","Likes/LikeFinderService.html","","<p>Service Object to Find a Like\n"],["LikesController","","LikesController.html","","<p>Define the Controllers required for the Likes endpoints\n"],["LikesControllerTest","","LikesControllerTest.html","",""],["LikesHelper","","LikesHelper.html","","<p>Helpers for Like views\n"],["Log","","Log.html","","<p>Class that represents the Model for the Log schema\n"],["LogPolicy","","LogPolicy.html","","<p>Define policies for Logs Controllers\n"],["LogTest","","LogTest.html","",""],["Logs","","Logs.html","",""],["Logs::LogIndexService","","Logs/LogIndexService.html","","<p>Service Object to List all Logs\n"],["LogsController","","LogsController.html","","<p>Define the Controllers required for the Logs endpoints\n"],["LogsControllerTest","","LogsControllerTest.html","",""],["LogsHelper","","LogsHelper.html","","<p>Helpers for Log views\n"],["Object","","Object.html","",""],["Order","","Order.html","","<p>Class that represents the Model for the Order schema\n"],["OrderLine","","OrderLine.html","","<p>Class that represents the Model for the OrderLine schema\n"],["OrderLineForm","","OrderLineForm.html","","<p>Form object for Order Line Model\n"],["OrderLinePolicy","","OrderLinePolicy.html","","<p>Define policies for OrderLines Controllers\n"],["OrderLineTest","","OrderLineTest.html","",""],["OrderLines","","OrderLines.html","",""],["OrderLines::OrderLineCreatorService","","OrderLines/OrderLineCreatorService.html","","<p>Service Object to Create a Order Line\n"],["OrderLines::OrderLineDestroyService","","OrderLines/OrderLineDestroyService.html","","<p>Service Object to Destroy a Order Line\n"],["OrderLines::OrderLineFinderService","","OrderLines/OrderLineFinderService.html","","<p>Service Object to Find a Order Line\n"],["OrderLines::OrderLineUpdaterService","","OrderLines/OrderLineUpdaterService.html","","<p>Service Object to Update a Order Line\n"],["OrderLinesController","","OrderLinesController.html","","<p>Define the Controllers required for the OrderLine endpoints\n"],["OrderLinesControllerTest","","OrderLinesControllerTest.html","",""],["OrderLinesHelper","","OrderLinesHelper.html","","<p>Helpers for Order Line views\n"],["OrderPolicy","","OrderPolicy.html","","<p>Define policies for Orders Controllers\n"],["OrderTest","","OrderTest.html","",""],["Orders","","Orders.html","",""],["Orders::OrderFinderService","","Orders/OrderFinderService.html","","<p>Service Object to Find an Order\n"],["Orders::OrderIndexService","","Orders/OrderIndexService.html","","<p>Service Object to Lists all Orders for a user\n"],["Orders::OrderUpdaterService","","Orders/OrderUpdaterService.html","","<p>Service Object to Update an Order to closed it for the user\n"],["OrdersController","","OrdersController.html","","<p>Define the Controllers required for the Order endpoints\n"],["OrdersControllerTest","","OrdersControllerTest.html","",""],["OrdersHelper","","OrdersHelper.html","","<p>Helpers for Order views\n"],["OrdersQuery","","OrdersQuery.html","","<p>Queries for Order Model\n"],["Product","","Product.html","","<p>Class that represents the Model for the Product schema\n"],["ProductForm","","ProductForm.html","","<p>Form object for Product Model\n"],["ProductPolicy","","ProductPolicy.html","","<p>Define policies for Products Controllers\n"],["ProductTest","","ProductTest.html","",""],["Products","","Products.html","",""],["Products::ProductCreatorService","","Products/ProductCreatorService.html","","<p>Service Object to Create a Product\n"],["Products::ProductDestroyService","","Products/ProductDestroyService.html","","<p>Service Object to Destroy a Product\n"],["Products::ProductFinderService","","Products/ProductFinderService.html","","<p>Service Object to Find a Product\n"],["Products::ProductIndexService","","Products/ProductIndexService.html","","<p>Service Object to List all Products\n"],["Products::ProductUpdaterService","","Products/ProductUpdaterService.html","","<p>Service Object to Update a Product\n"],["ProductsController","","ProductsController.html","","<p>Define the Controllers required for the Product endpoints\n"],["ProductsControllerTest","","ProductsControllerTest.html","",""],["ProductsHelper","","ProductsHelper.html","","<p>Helpers for Product views\n"],["ProductsQuery","","ProductsQuery.html","","<p>Queries for Products Model\n"],["ProductsTags","","ProductsTags.html","","<p>Migration to create join table for products and tags\n"],["RemoveUserIdFromLogs","","RemoveUserIdFromLogs.html","","<p>Migration to remove user_id column on log table\n"],["SessionsController","","SessionsController.html","","<p>Define additional controlers for the Devise Session controller\n"],["Store","","Store.html","",""],["Store::Application","","Store/Application.html","",""],["Tag","","Tag.html","","<p>Class that represents the Model for the Tag schema\n"],["TagTest","","TagTest.html","",""],["User","","User.html","","<p>Class that represents the Model for the User schema Build with Devise gem\n"],["UserTest","","UserTest.html","",""],["activate_bundler","Object","Object.html#method-i-activate_bundler","()",""],["activation_error_handling","Object","Object.html#method-i-activation_error_handling","()",""],["after_login","SessionsController","SessionsController.html#method-i-after_login","()","<p>Method that runs after a successful login to define is the order that is display in the /cart is the …\n"],["available_stock?","Product","Product.html#method-i-available_stock-3F","(quantity)","<p>Method that checks if the quantity passed on the order_line is less than the stock of the product\n"],["bundler_requirement","Object","Object.html#method-i-bundler_requirement","()",""],["bundler_requirement_for","Object","Object.html#method-i-bundler_requirement_for","(version)",""],["button_style","ApplicationHelper","ApplicationHelper.html#method-i-button_style","()","<p>Method that saves the string for the tailwind class to be reused in the buttons of the views\n"],["call","ApplicationService","ApplicationService.html#method-c-call","(*args)",""],["call","Comments::CommentCreatorService","Comments/CommentCreatorService.html#method-i-call","()",""],["call","Comments::CommentDestroyService","Comments/CommentDestroyService.html#method-i-call","()",""],["call","Comments::CommentFinderService","Comments/CommentFinderService.html#method-i-call","()",""],["call","Comments::CommentUpdaterService","Comments/CommentUpdaterService.html#method-i-call","()",""],["call","Likes::LikeCreatorService","Likes/LikeCreatorService.html#method-i-call","()",""],["call","Likes::LikeDestroyService","Likes/LikeDestroyService.html#method-i-call","()",""],["call","Likes::LikeFinderService","Likes/LikeFinderService.html#method-i-call","()",""],["call","Logs::LogIndexService","Logs/LogIndexService.html#method-i-call","()",""],["call","OrderLines::OrderLineCreatorService","OrderLines/OrderLineCreatorService.html#method-i-call","()",""],["call","OrderLines::OrderLineDestroyService","OrderLines/OrderLineDestroyService.html#method-i-call","()",""],["call","OrderLines::OrderLineFinderService","OrderLines/OrderLineFinderService.html#method-i-call","()",""],["call","OrderLines::OrderLineUpdaterService","OrderLines/OrderLineUpdaterService.html#method-i-call","()",""],["call","Orders::OrderFinderService","Orders/OrderFinderService.html#method-i-call","()",""],["call","Orders::OrderIndexService","Orders/OrderIndexService.html#method-i-call","()",""],["call","Orders::OrderUpdaterService","Orders/OrderUpdaterService.html#method-i-call","()",""],["call","Products::ProductCreatorService","Products/ProductCreatorService.html#method-i-call","()",""],["call","Products::ProductDestroyService","Products/ProductDestroyService.html#method-i-call","()",""],["call","Products::ProductFinderService","Products/ProductFinderService.html#method-i-call","()",""],["call","Products::ProductIndexService","Products/ProductIndexService.html#method-i-call","()",""],["call","Products::ProductUpdaterService","Products/ProductUpdaterService.html#method-i-call","()",""],["cart","OrdersController","OrdersController.html#method-i-cart","()","<p>Method that responds to the /cart endpoint to show the cart that is active on the current session\n"],["cart?","OrderPolicy","OrderPolicy.html#method-i-cart-3F","()","<p>Policy for the cart controller\n"],["change","AddAprovedToComments","AddAprovedToComments.html#method-i-change","()",""],["change","AddLikesCountToProducts","AddLikesCountToProducts.html#method-i-change","()",""],["change","AddUniqueIndexOfUserProductOnLikeModel","AddUniqueIndexOfUserProductOnLikeModel.html#method-i-change","()",""],["change","AddUserToLogs","AddUserToLogs.html#method-i-change","()",""],["change","ChangeNullConstraintOnOrders","ChangeNullConstraintOnOrders.html#method-i-change","()",""],["change","CreateComments","CreateComments.html#method-i-change","()",""],["change","CreateLikes","CreateLikes.html#method-i-change","()",""],["change","CreateLogs","CreateLogs.html#method-i-change","()",""],["change","CreateOrderLines","CreateOrderLines.html#method-i-change","()",""],["change","CreateOrders","CreateOrders.html#method-i-change","()",""],["change","CreateProducts","CreateProducts.html#method-i-change","()",""],["change","CreateTags","CreateTags.html#method-i-change","()",""],["change","DeviseCreateUsers","DeviseCreateUsers.html#method-i-change","()",""],["change","ProductsTags","ProductsTags.html#method-i-change","()",""],["change","RemoveUserIdFromLogs","RemoveUserIdFromLogs.html#method-i-change","()",""],["check_stock","OrderLineForm","OrderLineForm.html#method-i-check_stock","()","<p>Method that add an error if the product available_stock? method returns a false\n"],["cli_arg_version","Object","Object.html#method-i-cli_arg_version","()",""],["comment_approve_link","CommentsHelper","CommentsHelper.html#method-i-comment_approve_link","(commentable, comment)",""],["comment_delete_link","CommentsHelper","CommentsHelper.html#method-i-comment_delete_link","(commentable, comment)",""],["configure_permitted_parameters","ApplicationController","ApplicationController.html#method-i-configure_permitted_parameters","()",""],["create","CommentsController","CommentsController.html#method-i-create","()","<p>Method that responds to the create request for a new comment\n"],["create","LikesController","LikesController.html#method-i-create","()","<p>Method that responds to the create request for a new like\n"],["create","OrderLinesController","OrderLinesController.html#method-i-create","()","<p>Method that responds to the create request for a new order_line\n"],["create","ProductsController","ProductsController.html#method-i-create","()","<p>Method that respond to the create request to create a new product\n"],["create?","ApplicationPolicy","ApplicationPolicy.html#method-i-create-3F","()","<p>Define default policy for create controllers\n"],["create?","CommentPolicy","CommentPolicy.html#method-i-create-3F","()",""],["create?","LikePolicy","LikePolicy.html#method-i-create-3F","()","<p>Policy for the create controller\n"],["create?","OrderLinePolicy","OrderLinePolicy.html#method-i-create-3F","()","<p>Policy for the create controller\n"],["create?","ProductPolicy","ProductPolicy.html#method-i-create-3F","()","<p>Policy for the create controller\n"],["current_order","ApplicationHelper","ApplicationHelper.html#method-i-current_order","()","<p>Method that finds if an Order exists on the session so the user can keep working on it, otherwise creates …\n"],["destroy","CommentsController","CommentsController.html#method-i-destroy","()","<p>Method that responds to the destroy request for a comment\n"],["destroy","LikesController","LikesController.html#method-i-destroy","()","<p>Method that responds to the delete request to delete a like from a product\n"],["destroy","OrderLinesController","OrderLinesController.html#method-i-destroy","()","<p>Method that responds to the delete request to remove an order_line from the cart\n"],["destroy","ProductsController","ProductsController.html#method-i-destroy","()","<p>Method that responds to the delete request and removes a product from the database\n"],["destroy?","ApplicationPolicy","ApplicationPolicy.html#method-i-destroy-3F","()","<p>Define default policy for destroy controllers\n"],["destroy?","CommentPolicy","CommentPolicy.html#method-i-destroy-3F","()",""],["destroy?","LikePolicy","LikePolicy.html#method-i-destroy-3F","()","<p>Policy for the destroy controller\n"],["destroy?","OrderLinePolicy","OrderLinePolicy.html#method-i-destroy-3F","()","<p>Policy for the destroy controller\n"],["destroy?","ProductPolicy","ProductPolicy.html#method-i-destroy-3F","()","<p>Policy for the destroy controller\n"],["edit","ProductsController","ProductsController.html#method-i-edit","()","<p>Method that allows the render of the edit form to change the product\n"],["edit?","ApplicationPolicy","ApplicationPolicy.html#method-i-edit-3F","()","<p>Define default policy for edit controllers\n"],["env_var_version","Object","Object.html#method-i-env_var_version","()",""],["filter_by_tag","ProductsQuery","ProductsQuery.html#method-i-filter_by_tag","(tag)","<p>Method that filters the list of products by its tags\n"],["filter_by_term","ProductsQuery","ProductsQuery.html#method-i-filter_by_term","(term)","<p>Method that filters the list of products per name\n"],["filter_by_user","OrdersQuery","OrdersQuery.html#method-i-filter_by_user","(user)",""],["find_like","Product","Product.html#method-i-find_like","(current_user)","<p>Method that finds which user liked the current product\n"],["gemfile","Object","Object.html#method-i-gemfile","()",""],["index","LogsController","LogsController.html#method-i-index","()","<p>Method that responds to the get request to list all the records from the log database\n"],["index","OrdersController","OrdersController.html#method-i-index","()","<p>Method that responds to the get request to list all the records of orders from a logged user\n"],["index","ProductsController","ProductsController.html#method-i-index","()","<p>Method that responds to the get request to list all the records of products\n"],["index?","ApplicationPolicy","ApplicationPolicy.html#method-i-index-3F","()","<p>Define default policy for index controllers\n"],["index?","LogPolicy","LogPolicy.html#method-i-index-3F","()","<p>Policy for the index controller\n"],["index?","OrderPolicy","OrderPolicy.html#method-i-index-3F","()","<p>Policy for the index controller\n"],["invoked_as_script?","Object","Object.html#method-i-invoked_as_script-3F","()",""],["liked_by?","Product","Product.html#method-i-liked_by-3F","(current_user)","<p>Method that checks which user liked the current product\n"],["load_bundler!","Object","Object.html#method-i-load_bundler-21","()",""],["lockfile","Object","Object.html#method-i-lockfile","()",""],["lockfile_version","Object","Object.html#method-i-lockfile_version","()",""],["new","ApplicationPolicy","ApplicationPolicy.html#method-c-new","(user, record)","<p>Initialize the user and record to be revised\n"],["new","ApplicationPolicy::Scope","ApplicationPolicy/Scope.html#method-c-new","(user, scope)",""],["new","Comments::CommentCreatorService","Comments/CommentCreatorService.html#method-c-new","(params, commentable, user)",""],["new","Comments::CommentDestroyService","Comments/CommentDestroyService.html#method-c-new","(comment)",""],["new","Comments::CommentFinderService","Comments/CommentFinderService.html#method-c-new","(commentable, comment_id)",""],["new","Comments::CommentUpdaterService","Comments/CommentUpdaterService.html#method-c-new","(comment)",""],["new","Likes::LikeCreatorService","Likes/LikeCreatorService.html#method-c-new","(product_id, user)",""],["new","Likes::LikeDestroyService","Likes/LikeDestroyService.html#method-c-new","(like)",""],["new","Likes::LikeFinderService","Likes/LikeFinderService.html#method-c-new","(id)",""],["new","Logs::LogIndexService","Logs/LogIndexService.html#method-c-new","()",""],["new","OrderLines::OrderLineCreatorService","OrderLines/OrderLineCreatorService.html#method-c-new","(order, params)",""],["new","OrderLines::OrderLineDestroyService","OrderLines/OrderLineDestroyService.html#method-c-new","(order_line)",""],["new","OrderLines::OrderLineFinderService","OrderLines/OrderLineFinderService.html#method-c-new","(id)",""],["new","OrderLines::OrderLineUpdaterService","OrderLines/OrderLineUpdaterService.html#method-c-new","(order_line, params)",""],["new","Orders::OrderFinderService","Orders/OrderFinderService.html#method-c-new","(id)",""],["new","Orders::OrderIndexService","Orders/OrderIndexService.html#method-c-new","(current_user)",""],["new","Orders::OrderUpdaterService","Orders/OrderUpdaterService.html#method-c-new","(order, user)",""],["new","OrdersQuery","OrdersQuery.html#method-c-new","(relation = Order.all)",""],["new","Products::ProductCreatorService","Products/ProductCreatorService.html#method-c-new","(params)",""],["new","Products::ProductDestroyService","Products/ProductDestroyService.html#method-c-new","(product)",""],["new","Products::ProductFinderService","Products/ProductFinderService.html#method-c-new","(id)",""],["new","Products::ProductIndexService","Products/ProductIndexService.html#method-c-new","(params)",""],["new","Products::ProductUpdaterService","Products/ProductUpdaterService.html#method-c-new","(product, params, user)",""],["new","ProductsController","ProductsController.html#method-i-new","()","<p>Method that allows the render of the new form for a new product\n"],["new","ProductsQuery","ProductsQuery.html#method-c-new","(relation = Product.all)",""],["new?","ApplicationPolicy","ApplicationPolicy.html#method-i-new-3F","()","<p>Define default policy for new controllers\n"],["order_by_letter","ProductsQuery","ProductsQuery.html#method-i-order_by_letter","(direction)","<p>Method that orders the products by alphabetical order\n"],["order_by_likes_count","ProductsQuery","ProductsQuery.html#method-i-order_by_likes_count","(direction)","<p>Method that orders the products by the amount of likes\n"],["permitted_attributes","ProductPolicy","ProductPolicy.html#method-i-permitted_attributes","()",""],["resolve","ApplicationPolicy::Scope","ApplicationPolicy/Scope.html#method-i-resolve","()",""],["resolve","CommentPolicy::Scope","CommentPolicy/Scope.html#method-i-resolve","()",""],["show","OrdersController","OrdersController.html#method-i-show","()","<p>Method that responds to the get request to show an specific order\n"],["show","ProductsController","ProductsController.html#method-i-show","()","<p>Method that responds to the get request to show an specific product\n"],["show?","ApplicationPolicy","ApplicationPolicy.html#method-i-show-3F","()","<p>Define default policy for show controllers\n"],["show?","OrderPolicy","OrderPolicy.html#method-i-show-3F","()","<p>Policy for the show controller\n"],["system!","Object","Object.html#method-i-system-21","(*args)",""],["unique_name","ProductForm","ProductForm.html#method-i-unique_name","()","<p>Method that validates uniqueness of a name\n"],["update","CommentsController","CommentsController.html#method-i-update","()","<p>Method that responds to the update request for a comment\n"],["update","OrderLinesController","OrderLinesController.html#method-i-update","()","<p>Method that responds to the update request to change the quantity value of an existing order_line\n"],["update","OrdersController","OrdersController.html#method-i-update","()","<p>Method that responds to the update request to close an order from a cart adds the user doing the order, …\n"],["update","ProductsController","ProductsController.html#method-i-update","()","<p>Method that responds to the update request to check if the user is an admin and changes the stock and …\n"],["update?","ApplicationPolicy","ApplicationPolicy.html#method-i-update-3F","()","<p>Define default policy for update controllers\n"],["update?","CommentPolicy","CommentPolicy.html#method-i-update-3F","()",""],["update?","OrderLinePolicy","OrderLinePolicy.html#method-i-update-3F","()","<p>Policy for the update controller\n"],["update?","OrderPolicy","OrderPolicy.html#method-i-update-3F","()","<p>Policy for the update controller\n"],["update?","ProductPolicy","ProductPolicy.html#method-i-update-3F","()","<p>Policy for the update controller\n"],["Gemfile","","Gemfile.html","","<p># frozen_string_literal: true\n<p>source ‘rubygems.org’ git_source(:github) { |repo| “github.com/#{repo}.git …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  actioncable (7.0.3)\n    actionpack (= 7.0.3)\n    activesupport ...</pre>\n"],["Procfile.dev","","Procfile_dev.html","","<p>web: bin/rails server -p 3000 css: bin/rails tailwindcss:watch\n"],["README","","README_md.html","","<p>README\n<p>Store\n<p>This repository is also available on: challenge-week-five.herokuapp.com/\n"],["Rakefile","","Rakefile.html","","<p># frozen_string_literal: true\n<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for …\n"],["tailwind.css","","app/assets/builds/tailwind_css.html","","<p>/*! tailwindcss v3.1.3 | MIT License | tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{–tw-content:“”}html{-webkit-text-size-adjust:100%;font-family:Inter …\n"],["manifest.js","","app/assets/config/manifest_js.html","","<p>//= link_tree ../images //= link_directory ../stylesheets .css //= link_tree ../../javascript .js //= …\n"],["application.css","","app/assets/stylesheets/application_css.html","","<p>/*\n\n<pre>* This is a manifest file that&#39;ll be compiled into application.css, which will include all the files ...</pre>\n"],["application.tailwind.css","","app/assets/stylesheets/application_tailwind_css.html","","<p>@tailwind base; @tailwind components; @tailwind utilities;\n<p>/*\n<p>@layer components {\n"],["application.js","","app/javascript/application_js.html","","<p>// Configure your import map in config/importmap.rb. Read more: github.com/rails/importmap-rails import …\n"],["application.js","","app/javascript/controllers/application_js.html","","<p>import { Application } from “@hotwired/stimulus”\n<p>const application = Application.start()\n<p>//  …\n"],["hello_controller.js","","app/javascript/controllers/hello_controller_js.html","","<p>import { Controller } from “@hotwired/stimulus”\n<p>export default class extends Controller {\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">connect</span>() <span class=\"ruby-operator\">...</span>\n</pre>\n"],["index.js","","app/javascript/controllers/index_js.html","","<p>// Import and register all your controllers from the importmap under controllers/*\n<p>import { application …\n"],["dev","","bin/dev.html","","<p>#!/usr/bin/env bash\n<p>if ! command -v foreman &amp;&gt; /dev/null then\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">echo</span> <span class=\"ruby-string\">&quot;Installing foreman...&quot;</span>\n<span class=\"ruby-identifier\">gem</span> <span class=\"ruby-identifier\">install</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["config.ru","","config_ru.html","","<p># frozen_string_literal: true\n<p># This file is used by Rack-based servers to start the application.\n<p>require_relative …\n"],["credentials.yml.enc","","config/credentials_yml_enc.html","","<p>85zGGKO+IkWpd/e0SRKdxcPwIMM8giIz1I6EFaWOw1T0FbjMuJMpMr3hzNJcrfjF+cFW3iid9CdThBrf/vOhjF9LBE0sLYpCkKdZEE/adf9AYMbz7PyAapK7rjhtyPRLX4egogcdyITyzcRhunhAd7jhzWxQVeWpisPuQMOK+e95mEEZ71b4y0YAgEGeYZmpyOsD82234Xsq+r2inEIo6yNT27DZUeIa7nmLeW59zGmaCXRKX0XDZTeBGRL/dFRwrP+OEpgRkIzOWypwiDP9XOUrDhaYWAZdOVKvmlicefu9Hk06TYJfaao5FkMGOAC4ds1+82UHELVaMslFG0+4ww9jefuj0GjYrCZJR3Qtiiod1rBx9ITjIpjNmu08blSZrPXoTq7j3AxkTcV/00BPR2oMCyTXMee5/BMj–GnVmOcC1Urk6jGkx–gCiA+XtzW6/SRlCegQbPvw== …\n"],["tailwind.config.js","","config/tailwind_config_js.html","","<p>const defaultTheme = require(“tailwindcss/defaultTheme”);\n<p>module.exports = {\n\n<pre>content: [\n  &quot;./public/*.html&quot;, ...</pre>\n"],["application.css","","coverage/assets/0_12_3/application_css.html","","<p>html,body,div,span,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,code,del,dfn,em,img,q,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,dialog,figure,footer,header,hgroup,nav,section{margin:0;padding:0;border:0;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline}article,aside,dialog,figure,footer,header,hgroup,nav,section{display:block}body{line-height:1.5}table{border-collapse:separate;border-spacing:0}caption,th,td{text-align:left;font-weight:normal}table,td,th{vertical-align:middle}blockquote:before,blockquote:after,q:before,q:after{content:“”}blockquote,q{quotes:“” …\n"],["application.js","","coverage/assets/0_12_3/application_js.html","","<p>!function(e,t){“use strict”;“object”==typeof module&&“object”==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw …\n"],["index.html","","coverage/index_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html xmlns=‘www.w3.org/1999/xhtml’&gt;\n\n<pre>&lt;head&gt;\n  &lt;title&gt;Code coverage ...</pre>\n"],["products.json","","db/data/products_json.html","","<p>[\n\n<pre>{\n  &quot;name&quot;: &quot;doritos&quot;,\n  &quot;description&quot;: &quot;Flavored tortilla chips&quot;,\n  &quot;price&quot;: 7.00,\n  &quot;stock&quot;: 50,\n ...</pre>\n"],["tags.json","","db/data/tags_json.html","","<p>[\n\n<pre>&quot;chips&quot;,\n&quot;soda&quot;,\n&quot;beer&quot;,\n&quot;cookies&quot;,\n&quot;chocolates&quot;,\n&quot;snack&quot;,\n&quot;beverage&quot;</pre>\n<p>]\n"],["development.log","","log/development_log.html","","<p>Started GET “/” for 127.0.0.1 at 2022-07-17 01:47:18 -0500\n<p>ActiveRecord::ConnectionNotEstablished …\n"],["test.log","","log/test_log.html","","\n<pre>\u001b[1m\u001b[36mActiveRecord::InternalMetadata Pluck (32.3ms)\u001b[0m  \u001b[1m\u001b[34mSELECT &quot;ar_internal_metadata&quot;.&quot;value&quot; ...</pre>\n"],["404.html","","public/404_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The page you were looking for doesn&#39;t exist (404)&lt;/title&gt; ...</pre>\n"],["422.html","","public/422_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The change you wanted was rejected (422)&lt;/title&gt; ...</pre>\n"],["500.html","","public/500_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;We&#39;re sorry, but something went wrong (500)&lt;/title&gt; ...</pre>\n"],["apple-touch-icon-precomposed.png","","public/apple-touch-icon-precomposed_png.html","",""],["apple-touch-icon.png","","public/apple-touch-icon_png.html","",""],["favicon.ico","","public/favicon_ico.html","",""],["robots","","public/robots_txt.html","","<p># See www.robotstxt.org/robotstxt.html for documentation on how to use the robots.txt file\n"],["development_secret","","tmp/development_secret_txt.html","","<p>f2ea5abc6eba48b476f8c0a0ed6efb79e6521e1c9b8c7da97470d57ca85aa17576053b0e88312bb5be65cc3abadd8c1e49f097f0e559eaee0e9ebf8d536965ca …\n"],["restart","","tmp/restart_txt.html","",""]]}}