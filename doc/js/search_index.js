var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","applicationjob","applicationmailer","applicationpolicy","scope","applicationrecord","comment","commentpolicy","commentscontroller","commentshelper","like","likepolicy","likescontroller","likeshelper","log","logpolicy","logscontroller","logshelper","order","orderline","orderlinepolicy","orderlinescontroller","orderlineshelper","orderpolicy","orderscontroller","ordershelper","product","productpolicy","productscontroller","productshelper","sessionscontroller","tag","user","add_product()","after_login()","available_stock?()","button_style()","cart()","cart?()","check_stock()","configure_permitted_parameters()","create()","create()","create()","create()","create?()","create?()","create?()","create?()","create?()","current_order()","destroy()","destroy()","destroy()","destroy?()","destroy?()","destroy?()","destroy?()","edit()","edit?()","filter_by_letter()","filter_by_likes_count()","filter_by_tag()","filter_by_term()","find_like()","index()","index()","index()","index?()","index?()","index?()","liked_by?()","new()","new()","new()","new?()","resolve()","show()","show()","show?()","show?()","update()","update()","update()","update?()","update?()","update?()","update?()","update_stock()"],"longSearchIndex":["applicationcontroller","applicationhelper","applicationjob","applicationmailer","applicationpolicy","applicationpolicy::scope","applicationrecord","comment","commentpolicy","commentscontroller","commentshelper","like","likepolicy","likescontroller","likeshelper","log","logpolicy","logscontroller","logshelper","order","orderline","orderlinepolicy","orderlinescontroller","orderlineshelper","orderpolicy","orderscontroller","ordershelper","product","productpolicy","productscontroller","productshelper","sessionscontroller","tag","user","order#add_product()","sessionscontroller#after_login()","product#available_stock?()","applicationhelper#button_style()","orderscontroller#cart()","orderpolicy#cart?()","orderline#check_stock()","applicationcontroller#configure_permitted_parameters()","commentscontroller#create()","likescontroller#create()","orderlinescontroller#create()","productscontroller#create()","applicationpolicy#create?()","commentpolicy#create?()","likepolicy#create?()","orderlinepolicy#create?()","productpolicy#create?()","applicationhelper#current_order()","likescontroller#destroy()","orderlinescontroller#destroy()","productscontroller#destroy()","applicationpolicy#destroy?()","likepolicy#destroy?()","orderlinepolicy#destroy?()","productpolicy#destroy?()","productscontroller#edit()","applicationpolicy#edit?()","product::filter_by_letter()","product::filter_by_likes_count()","product::filter_by_tag()","product::filter_by_term()","product#find_like()","logscontroller#index()","orderscontroller#index()","productscontroller#index()","applicationpolicy#index?()","logpolicy#index?()","orderpolicy#index?()","product#liked_by?()","applicationpolicy::new()","applicationpolicy::scope::new()","productscontroller#new()","applicationpolicy#new?()","applicationpolicy::scope#resolve()","orderscontroller#show()","productscontroller#show()","applicationpolicy#show?()","orderpolicy#show?()","orderlinescontroller#update()","orderscontroller#update()","productscontroller#update()","applicationpolicy#update?()","orderlinepolicy#update?()","orderpolicy#update?()","productpolicy#update?()","product#update_stock()"],"info":[["ApplicationController","","ApplicationController.html","","<p>Methods that applies to the overall controllers, include Pundit gem for Authorization and Helpers for …\n"],["ApplicationHelper","","ApplicationHelper.html","","<p>Helpers for overall Application views\n"],["ApplicationJob","","ApplicationJob.html","",""],["ApplicationMailer","","ApplicationMailer.html","",""],["ApplicationPolicy","","ApplicationPolicy.html","","<p>General configuration for the policies generated by the Pundit gem\n"],["ApplicationPolicy::Scope","","ApplicationPolicy/Scope.html","","<p>Scopes\n"],["ApplicationRecord","","ApplicationRecord.html","",""],["Comment","","Comment.html","","<p>Class that represents the Model for the Comment schema\n"],["CommentPolicy","","CommentPolicy.html","","<p>Define policies for Comments Controllers\n"],["CommentsController","","CommentsController.html","","<p>Define the Controllers required for the Comments endpoints\n"],["CommentsHelper","","CommentsHelper.html","","<p>Helpers for Comments views\n"],["Like","","Like.html","","<p>Class that represents the Model for the Like schema\n"],["LikePolicy","","LikePolicy.html","","<p>Define policies for Likes Controllers\n"],["LikesController","","LikesController.html","","<p>Define the Controllers required for the Likes endpoints\n"],["LikesHelper","","LikesHelper.html","","<p>Helpers for Like views\n"],["Log","","Log.html","","<p>Class that represents the Model for the Log schema\n"],["LogPolicy","","LogPolicy.html","","<p>Define policies for Logs Controllers\n"],["LogsController","","LogsController.html","","<p>Define the Controllers required for the Logs endpoints\n"],["LogsHelper","","LogsHelper.html","","<p>Helpers for Log views\n"],["Order","","Order.html","","<p>Class that represents the Model for the Order schema\n"],["OrderLine","","OrderLine.html","","<p>Class that represents the Model for the OrderLine schema\n"],["OrderLinePolicy","","OrderLinePolicy.html","","<p>Define policies for OrderLines Controllers\n"],["OrderLinesController","","OrderLinesController.html","","<p>Define the Controllers required for the OrderLine endpoints\n"],["OrderLinesHelper","","OrderLinesHelper.html","","<p>Helpers for Order Line views\n"],["OrderPolicy","","OrderPolicy.html","","<p>Define policies for Orders Controllers\n"],["OrdersController","","OrdersController.html","","<p>Define the Controllers required for the Order endpoints\n"],["OrdersHelper","","OrdersHelper.html","","<p>Helpers for Order views\n"],["Product","","Product.html","","<p>Class that represents the Model for the Product schema\n"],["ProductPolicy","","ProductPolicy.html","","<p>Define policies for Products Controllers\n"],["ProductsController","","ProductsController.html","","<p>Define the Controllers required for the Product endpoints\n"],["ProductsHelper","","ProductsHelper.html","","<p>Helpers for Product views\n"],["SessionsController","","SessionsController.html","","<p>Define additional controlers for the Devise Session controller\n"],["Tag","","Tag.html","","<p>Class that represents the Model for the Tag schema\n"],["User","","User.html","","<p>Class that represents the Model for the User schema Build with Devise gem\n"],["add_product","Order","Order.html#method-i-add_product","(params)","<p>Method that defines that if an order_line of a product already exists it  updates the quantity value …\n"],["after_login","SessionsController","SessionsController.html#method-i-after_login","()","<p>Method that runs after a successful login to define is the order that is display in the /cart is the …\n"],["available_stock?","Product","Product.html#method-i-available_stock-3F","(quantity)","<p>Method that checks if the quantity passed on the order_line is  less than the stock of the product\n"],["button_style","ApplicationHelper","ApplicationHelper.html#method-i-button_style","()","<p>Method that saves the string for the tailwind class to be reused in the buttons of the views\n"],["cart","OrdersController","OrdersController.html#method-i-cart","()","<p>Method that responds to the /cart endpoint to show the cart that is active on the current session\n"],["cart?","OrderPolicy","OrderPolicy.html#method-i-cart-3F","()","<p>Policy for the cart controller\n"],["check_stock","OrderLine","OrderLine.html#method-i-check_stock","()","<p>Method that add an error if the product available_stock? method returns a false\n"],["configure_permitted_parameters","ApplicationController","ApplicationController.html#method-i-configure_permitted_parameters","()",""],["create","CommentsController","CommentsController.html#method-i-create","()","<p>Method that responds to the create request for a new comment\n"],["create","LikesController","LikesController.html#method-i-create","()","<p>Method that responds to the create request for a new like\n"],["create","OrderLinesController","OrderLinesController.html#method-i-create","()","<p>Method that responds to the create request for a new order_line\n"],["create","ProductsController","ProductsController.html#method-i-create","()","<p>Method that respond to the create request to create a new product\n"],["create?","ApplicationPolicy","ApplicationPolicy.html#method-i-create-3F","()","<p>Define default policy for create controllers\n"],["create?","CommentPolicy","CommentPolicy.html#method-i-create-3F","()","<p>Policy for the create controller\n"],["create?","LikePolicy","LikePolicy.html#method-i-create-3F","()","<p>Policy for the create controller\n"],["create?","OrderLinePolicy","OrderLinePolicy.html#method-i-create-3F","()","<p>Policy for the create controller\n"],["create?","ProductPolicy","ProductPolicy.html#method-i-create-3F","()","<p>Policy for the create controller\n"],["current_order","ApplicationHelper","ApplicationHelper.html#method-i-current_order","()","<p>Method that finds if an Order exists on the session so the user can keep working on it, otherwise creates …\n"],["destroy","LikesController","LikesController.html#method-i-destroy","()","<p>Method that responds to the delete request to delete a like from a product\n"],["destroy","OrderLinesController","OrderLinesController.html#method-i-destroy","()","<p>Method that responds to the delete request to remove an order_line from the cart\n"],["destroy","ProductsController","ProductsController.html#method-i-destroy","()","<p>Method that responds to the delete request and removes a product from the database\n"],["destroy?","ApplicationPolicy","ApplicationPolicy.html#method-i-destroy-3F","()","<p>Define default policy for destroy controllers\n"],["destroy?","LikePolicy","LikePolicy.html#method-i-destroy-3F","()","<p>Policy for the destroy controller\n"],["destroy?","OrderLinePolicy","OrderLinePolicy.html#method-i-destroy-3F","()","<p>Policy for the destroy controller\n"],["destroy?","ProductPolicy","ProductPolicy.html#method-i-destroy-3F","()","<p>Policy for the destroy controller\n"],["edit","ProductsController","ProductsController.html#method-i-edit","()","<p>Method that allows the render of the edit form to change the product\n"],["edit?","ApplicationPolicy","ApplicationPolicy.html#method-i-edit-3F","()","<p>Define default policy for edit controllers\n"],["filter_by_letter","Product","Product.html#method-c-filter_by_letter","(direction)","<p>Method that filters the products by alphabetical order\n"],["filter_by_likes_count","Product","Product.html#method-c-filter_by_likes_count","(direction)","<p>Method that filters the products by the amount of likes\n"],["filter_by_tag","Product","Product.html#method-c-filter_by_tag","(tag)","<p>Method that filters the list of products by its tags\n"],["filter_by_term","Product","Product.html#method-c-filter_by_term","(term)","<p>Method that filters the list of products per name\n"],["find_like","Product","Product.html#method-i-find_like","(current_user)","<p>Method that finds which user liked the current product\n"],["index","LogsController","LogsController.html#method-i-index","()","<p>Method that responds to the get request to list all the records from the log database\n"],["index","OrdersController","OrdersController.html#method-i-index","()","<p>Method that responds to the get request to list all the records of orders from a logged user\n"],["index","ProductsController","ProductsController.html#method-i-index","()","<p>Method that responds to the get request to list all the records of products\n"],["index?","ApplicationPolicy","ApplicationPolicy.html#method-i-index-3F","()","<p>Define default policy for index controllers\n"],["index?","LogPolicy","LogPolicy.html#method-i-index-3F","()","<p>Policy for the index controller\n"],["index?","OrderPolicy","OrderPolicy.html#method-i-index-3F","()","<p>Policy for the index controller\n"],["liked_by?","Product","Product.html#method-i-liked_by-3F","(current_user)","<p>Method that checks which user liked the current product\n"],["new","ApplicationPolicy","ApplicationPolicy.html#method-c-new","(user, record)","<p>Initialize the user and record to be revised\n"],["new","ApplicationPolicy::Scope","ApplicationPolicy/Scope.html#method-c-new","(user, scope)",""],["new","ProductsController","ProductsController.html#method-i-new","()","<p>Method that allows the render of the new form for a new product\n"],["new?","ApplicationPolicy","ApplicationPolicy.html#method-i-new-3F","()","<p>Define default policy for new controllers\n"],["resolve","ApplicationPolicy::Scope","ApplicationPolicy/Scope.html#method-i-resolve","()",""],["show","OrdersController","OrdersController.html#method-i-show","()","<p>Method that responds to the get request to show an specific order\n"],["show","ProductsController","ProductsController.html#method-i-show","()","<p>Method that responds to the get request to show an specific product\n"],["show?","ApplicationPolicy","ApplicationPolicy.html#method-i-show-3F","()","<p>Define default policy for show controllers\n"],["show?","OrderPolicy","OrderPolicy.html#method-i-show-3F","()","<p>Policy for the show controller\n"],["update","OrderLinesController","OrderLinesController.html#method-i-update","()","<p>Method that responds to the update request to change the quantity value of an existing order_line\n"],["update","OrdersController","OrdersController.html#method-i-update","()","<p>Method that responds to the update request to close an order from a cart adds the user doing the order, …\n"],["update","ProductsController","ProductsController.html#method-i-update","()","<p>Method that responds to the update request to check if the user is an admin and changes the stock and …\n"],["update?","ApplicationPolicy","ApplicationPolicy.html#method-i-update-3F","()","<p>Define default policy for update controllers\n"],["update?","OrderLinePolicy","OrderLinePolicy.html#method-i-update-3F","()","<p>Policy for the update controller\n"],["update?","OrderPolicy","OrderPolicy.html#method-i-update-3F","()","<p>Policy for the update controller\n"],["update?","ProductPolicy","ProductPolicy.html#method-i-update-3F","()","<p>Policy for the update controller\n"],["update_stock","Product","Product.html#method-i-update_stock","(quantity)","<p>Method that updates the stock of a product after the order is saved\n"]]}}